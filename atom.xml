<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Masonnpe&#39;s Blog</title>
  
  <subtitle>愿所有的坚持终不被辜负</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://masonnpe.github.io/"/>
  <updated>2018-10-23T15:30:16.977Z</updated>
  <id>https://masonnpe.github.io/</id>
  
  <author>
    <name>Masonnpe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker简介</title>
    <link href="https://masonnpe.github.io/2018/10/23/Docker/Docker%E7%AE%80%E4%BB%8B/"/>
    <id>https://masonnpe.github.io/2018/10/23/Docker/Docker简介/</id>
    <published>2018-10-23T14:03:17.976Z</published>
    <updated>2018-10-23T15:30:16.977Z</updated>
    
    <content type="html"><![CDATA[<p>Docker是一种虚拟化技术解决开发环境和生产环境环境一致的问题，通过Docker可以将程序运行的环境也纳入到版本控制中，解决一些项目交付时的麻烦。</p><p><img src="http://pgmrhouhm.bkt.clouddn.com/docker%E6%9E%B6%E6%9E%84.jpg" alt="docker架构"></p><h2 id="底层技术支持"><a href="#底层技术支持" class="headerlink" title="底层技术支持"></a>底层技术支持</h2><p>Namespaces：通过Linux的Namespaces对不同的容器实现了隔离，包括进程、网络等信息。通过挂载点映射和宿主机的目录。</p><p>ControlGroups：隔离宿主机器上的物理资源，例如CPU、内存、磁盘I/O和网络带宽。</p><p>UnionFileSystems：container和image的分层。</p><a id="more"></a><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><p>可以使用<code>docker images ls</code>命令查看本机的image</p><ul><li><p>文件和metadata的集合</p></li><li><p>分层，每层都可以添加、改变、删除文件</p></li><li><p>image本身是只读的</p></li></ul><p><strong>获取方式</strong></p><ul><li>可以通过Dockerfile构建自己的image，使用<code>docker build</code>获取image</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:15.04</span><br><span class="line">COPY . /app</span><br><span class="line">RUN make /app</span><br><span class="line">CMD python /app/app.py</span><br></pre></td></tr></table></figure><ul><li><code>docker pull rabbitmq:management</code>拉取image</li></ul><h2 id="container"><a href="#container" class="headerlink" title="container"></a>container</h2><p>可以使用<code>docker container ls</code>命令查看本机的container </p><ul><li>通过image创建</li><li>类比面向对象：image是类，container是实例</li><li>负责运行</li></ul><p><code>docker run -it xxx</code> 可以进container里面进行一些操作</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker是一种虚拟化技术解决开发环境和生产环境环境一致的问题，通过Docker可以将程序运行的环境也纳入到版本控制中，解决一些项目交付时的麻烦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://pgmrhouhm.bkt.clouddn.com/docker%E6%9E%B6%E6%9E%84.jpg&quot; alt=&quot;docker架构&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;底层技术支持&quot;&gt;&lt;a href=&quot;#底层技术支持&quot; class=&quot;headerlink&quot; title=&quot;底层技术支持&quot;&gt;&lt;/a&gt;底层技术支持&lt;/h2&gt;&lt;p&gt;Namespaces：通过Linux的Namespaces对不同的容器实现了隔离，包括进程、网络等信息。通过挂载点映射和宿主机的目录。&lt;/p&gt;
&lt;p&gt;ControlGroups：隔离宿主机器上的物理资源，例如CPU、内存、磁盘I/O和网络带宽。&lt;/p&gt;
&lt;p&gt;UnionFileSystems：container和image的分层。&lt;/p&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://masonnpe.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://masonnpe.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS环境下安装Docker</title>
    <link href="https://masonnpe.github.io/2018/10/23/Docker/CentOS%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85Docker/"/>
    <id>https://masonnpe.github.io/2018/10/23/Docker/CentOS环境下安装Docker/</id>
    <published>2018-10-23T13:25:01.305Z</published>
    <updated>2018-10-23T14:00:00.540Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">官方安装文档</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">           docker-client \</span><br><span class="line">           docker-client-latest \</span><br><span class="line">           docker-common \</span><br><span class="line">           docker-latest \</span><br><span class="line">           docker-latest-logrotate \</span><br><span class="line">           docker-logrotate \</span><br><span class="line">           docker-selinux \</span><br><span class="line">           docker-engine-selinux \</span><br><span class="line">           docker-engine</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">yum install -y docker-ce</span><br><span class="line">systemctl start docker</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><a id="more"></a><p>也可以使用阿里的镜像，将第二步指令替换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方安装文档&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum remove docker \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-client \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-client-latest \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-common \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-latest \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-latest-logrotate \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-logrotate \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-selinux \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-engine-selinux \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           docker-engine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y yum-utils device-mapper-persistent-data lvm2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y docker-ce&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://masonnpe.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://masonnpe.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>数据库锁</title>
    <link href="https://masonnpe.github.io/2018/10/22/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81/"/>
    <id>https://masonnpe.github.io/2018/10/22/数据库/数据库锁/</id>
    <published>2018-10-22T15:49:53.298Z</published>
    <updated>2018-10-22T15:57:43.868Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th></th><th>共享锁(S)</th><th>排他锁(X)</th><th>意向共享锁(IS)</th><th>意向排他锁(IX)</th></tr></thead><tbody><tr><td><strong>共享锁</strong></td><td>兼容</td><td>冲突</td><td>兼容</td><td>冲突</td></tr><tr><td><strong>排他锁</strong></td><td>冲突</td><td>冲突</td><td>冲突</td><td>冲突</td></tr><tr><td><strong>意向共享锁</strong></td><td>兼容</td><td>冲突</td><td>兼容</td><td>兼容</td></tr><tr><td><strong>意向排他锁</strong></td><td>冲突</td><td>冲突</td><td>兼容</td><td>兼容</td></tr></tbody></table><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;共享锁(S)&lt;/th&gt;
&lt;th&gt;排他锁(X)&lt;/th&gt;
&lt;th&gt;意向共享锁(IS)&lt;/th&gt;
&lt;th&gt;意向排他锁(IX)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;共享锁&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;排他锁&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;意向共享锁&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;意向排他锁&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;冲突&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;td&gt;兼容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://masonnpe.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Lock" scheme="https://masonnpe.github.io/tags/Lock/"/>
    
  </entry>
  
  <entry>
    <title>数据库引擎</title>
    <link href="https://masonnpe.github.io/2018/10/22/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E/"/>
    <id>https://masonnpe.github.io/2018/10/22/数据库/数据库引擎/</id>
    <published>2018-10-22T15:42:35.973Z</published>
    <updated>2018-10-22T15:57:39.520Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th></th><th>Innodb</th><th>Myisam</th></tr></thead><tbody><tr><td>存储文件</td><td>.frm表定义文件 ibd数据文件</td><td>.frm表定义文件 .myd数据文件 .myi索引文件</td></tr><tr><td>锁</td><td>表锁、行锁</td><td>表锁</td></tr><tr><td>事务</td><td>ACID</td><td>不支持</td></tr><tr><td>CURD</td><td>读、写</td><td>读多</td></tr><tr><td>count</td><td>扫表</td><td>专门存储的地方</td></tr><tr><td>索引结构</td><td>B+Tree</td><td>B+Tree</td></tr></tbody></table><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Innodb&lt;/th&gt;
&lt;th&gt;Myisam&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;存储文件&lt;/td&gt;
&lt;td&gt;.frm表定义文件 ibd数据文件&lt;/td&gt;
&lt;td&gt;.frm表定义文件 .myd数据文件 .myi索引文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;锁&lt;/td&gt;
&lt;td&gt;表锁、行锁&lt;/td&gt;
&lt;td&gt;表锁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;事务&lt;/td&gt;
&lt;td&gt;ACID&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CURD&lt;/td&gt;
&lt;td&gt;读、写&lt;/td&gt;
&lt;td&gt;读多&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;count&lt;/td&gt;
&lt;td&gt;扫表&lt;/td&gt;
&lt;td&gt;专门存储的地方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;索引结构&lt;/td&gt;
&lt;td&gt;B+Tree&lt;/td&gt;
&lt;td&gt;B+Tree&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://masonnpe.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Innodb" scheme="https://masonnpe.github.io/tags/Innodb/"/>
    
      <category term="Myisam" scheme="https://masonnpe.github.io/tags/Myisam/"/>
    
  </entry>
  
  <entry>
    <title>BASE理论</title>
    <link href="https://masonnpe.github.io/2018/10/22/%E5%88%86%E5%B8%83%E5%BC%8F/BASE%E7%90%86%E8%AE%BA/"/>
    <id>https://masonnpe.github.io/2018/10/22/分布式/BASE理论/</id>
    <published>2018-10-22T15:19:41.257Z</published>
    <updated>2018-10-22T15:31:04.162Z</updated>
    
    <content type="html"><![CDATA[<p>BASE理论是对CAP理论中一致性和可用性权衡的结果，如果无法做到强一致性，那就要采取合适的方法使系统达到最终一致性。传统的数据库系统要求强一致性(ACID)，BASE理论强调通过牺牲强一致性来达到可用性。在实际业务场景中，要结合业务对一致性的要求，将ACID和BASE结合起来使用。</p><h2 id="基本可用-BasicallyAvailable"><a href="#基本可用-BasicallyAvailable" class="headerlink" title="基本可用(BasicallyAvailable)"></a>基本可用(BasicallyAvailable)</h2><p>分布式系统在出现故障的时候，保证核心功能可用，允许损失部分可用性。</p><h2 id="软状态-SoftState"><a href="#软状态-SoftState" class="headerlink" title="软状态(SoftState)"></a>软状态(SoftState)</h2><p>允许系统中的数据存在中间状态，即系统不同节点的数据副本之间进行同步的过程存在时间延迟</p><h2 id="最终一致性-EventuallyConsistent"><a href="#最终一致性-EventuallyConsistent" class="headerlink" title="最终一致性(EventuallyConsistent)"></a>最终一致性(EventuallyConsistent)</h2><p>系统中所有的数据副本，在经过一段时间的同步后，最终能达到一致的状态。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BASE理论是对CAP理论中一致性和可用性权衡的结果，如果无法做到强一致性，那就要采取合适的方法使系统达到最终一致性。传统的数据库系统要求强一致性(ACID)，BASE理论强调通过牺牲强一致性来达到可用性。在实际业务场景中，要结合业务对一致性的要求，将ACID和BASE结合起来使用。&lt;/p&gt;
&lt;h2 id=&quot;基本可用-BasicallyAvailable&quot;&gt;&lt;a href=&quot;#基本可用-BasicallyAvailable&quot; class=&quot;headerlink&quot; title=&quot;基本可用(BasicallyAvailable)&quot;&gt;&lt;/a&gt;基本可用(BasicallyAvailable)&lt;/h2&gt;&lt;p&gt;分布式系统在出现故障的时候，保证核心功能可用，允许损失部分可用性。&lt;/p&gt;
&lt;h2 id=&quot;软状态-SoftState&quot;&gt;&lt;a href=&quot;#软状态-SoftState&quot; class=&quot;headerlink&quot; title=&quot;软状态(SoftState)&quot;&gt;&lt;/a&gt;软状态(SoftState)&lt;/h2&gt;&lt;p&gt;允许系统中的数据存在中间状态，即系统不同节点的数据副本之间进行同步的过程存在时间延迟&lt;/p&gt;
&lt;h2 id=&quot;最终一致性-EventuallyConsistent&quot;&gt;&lt;a href=&quot;#最终一致性-EventuallyConsistent&quot; class=&quot;headerlink&quot; title=&quot;最终一致性(EventuallyConsistent)&quot;&gt;&lt;/a&gt;最终一致性(EventuallyConsistent)&lt;/h2&gt;&lt;p&gt;系统中所有的数据副本，在经过一段时间的同步后，最终能达到一致的状态。&lt;/p&gt;
    
    </summary>
    
      <category term="分布式" scheme="https://masonnpe.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="BASE" scheme="https://masonnpe.github.io/tags/BASE/"/>
    
  </entry>
  
  <entry>
    <title>CAP理论</title>
    <link href="https://masonnpe.github.io/2018/10/22/%E5%88%86%E5%B8%83%E5%BC%8F/CAP%E7%90%86%E8%AE%BA/"/>
    <id>https://masonnpe.github.io/2018/10/22/分布式/CAP理论/</id>
    <published>2018-10-22T15:19:10.566Z</published>
    <updated>2018-10-22T15:19:29.244Z</updated>
    
    <content type="html"><![CDATA[<p>分布式系统不可能同时满足一致性(Consistency)、可用性(Availability)、分区容忍性(Partition Tolerance)，最多只能同时满足其中两项，这就是CAP理论。在分布式系统中分区容忍性必不可少，所以CAP理论实际上是要在可用性和一致性之间做取舍。</p><h2 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h2><p>多个数据副本能保持一致，系统在执行数据更新操作之后能够从一致性状态转移到另一个一致性状态。如果系统的一个数据更新成功之后，所有用户都能够读取到最新的值，系统就被认为具有强一致性。</p><h2 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h2><p>分布式系统在面对各种异常时都可以提供正常服务，对于用户的每一个操作、请求总是能够在有限的时间内返回结果。</p><h2 id="分区容忍性"><a href="#分区容忍性" class="headerlink" title="分区容忍性"></a>分区容忍性</h2><p>分布式系统在遇到任何网络分区故障的时候，仍然能对外提供一致性和可用性的服务，除非是整个网络环境都发生了故障。网络分区指分布式系统中的节点被划分为多个区域，每个区域内部可以通信，但是区域之间无法通信。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分布式系统不可能同时满足一致性(Consistency)、可用性(Availability)、分区容忍性(Partition Tolerance)，最多只能同时满足其中两项，这就是CAP理论。在分布式系统中分区容忍性必不可少，所以CAP理论实际上是要在可用性和一致性之间做取舍。&lt;/p&gt;
&lt;h2 id=&quot;一致性&quot;&gt;&lt;a href=&quot;#一致性&quot; class=&quot;headerlink&quot; title=&quot;一致性&quot;&gt;&lt;/a&gt;一致性&lt;/h2&gt;&lt;p&gt;多个数据副本能保持一致，系统在执行数据更新操作之后能够从一致性状态转移到另一个一致性状态。如果系统的一个数据更新成功之后，所有用户都能够读取到最新的值，系统就被认为具有强一致性。&lt;/p&gt;
&lt;h2 id=&quot;可用性&quot;&gt;&lt;a href=&quot;#可用性&quot; class=&quot;headerlink&quot; title=&quot;可用性&quot;&gt;&lt;/a&gt;可用性&lt;/h2&gt;&lt;p&gt;分布式系统在面对各种异常时都可以提供正常服务，对于用户的每一个操作、请求总是能够在有限的时间内返回结果。&lt;/p&gt;
&lt;h2 id=&quot;分区容忍性&quot;&gt;&lt;a href=&quot;#分区容忍性&quot; class=&quot;headerlink&quot; title=&quot;分区容忍性&quot;&gt;&lt;/a&gt;分区容忍性&lt;/h2&gt;&lt;p&gt;分布式系统在遇到任何网络分区故障的时候，仍然能对外提供一致性和可用性的服务，除非是整个网络环境都发生了故障。网络分区指分布式系统中的节点被划分为多个区域，每个区域内部可以通信，但是区域之间无法通信。&lt;/p&gt;
    
    </summary>
    
      <category term="分布式" scheme="https://masonnpe.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="CAP" scheme="https://masonnpe.github.io/tags/CAP/"/>
    
  </entry>
  
</feed>
